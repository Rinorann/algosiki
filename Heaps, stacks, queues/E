def isSorted(arr):
    n = len(arr)
    if n <= 1:
        return True
    for i in range(1, n):
        if arr[i] < arr[i - 1]:
            return False
    return True


def isHeap(arr, n):
    for i in range(n // 2 - 1, -1, -1):
        left = 2 * i + 1
        right = 2 * i + 2
        if left < n and arr[left] > arr[i]:
            return False
        elif right < n and arr[right] > arr[i]:
            return False
    return True


def heapify(arr, m):
    n = len(arr[:m])
    heapified = False
    while not heapified:
        for i in range(n // 2 - 1, -1, -1):
            left = 2 * i + 1
            right = 2 * i + 2
            if left < n and right >= n and arr[left] > arr[i]:
                arr[i], arr[left] = arr[left], arr[i]
            elif left < n and right < n and arr[left] > arr[right] and arr[left] > arr[i]:
                arr[i], arr[left] = arr[left], arr[i]
            elif right < n and left < n and arr[right] > arr[left] and arr[right] > arr[i]:
                arr[i], arr[right] = arr[right], arr[i]
        heapified = isHeap(arr[:m], n)
    return arr


def heapsort(arr):
    n = len(arr)
    sorted = False
    while not sorted:
        for i in range(n, 0, -1):
            arr = heapify(arr, i)
            arr[0], arr[i-1] = arr[i-1], arr[0]
        sorted = isSorted(arr)
    return arr


arr = [5, 3, 8, 4, 1, 2]
m = len(arr)
print(heapsort(arr))
