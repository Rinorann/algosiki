def isHeap(arr, n):
    for i in range(n // 2 - 1, -1, -1):
        left = 2 * i + 1
        right = 2 * i + 2
        if left < n and arr[left] > arr[i]:
            return False
        elif right < n and arr[right] > arr[i]:
            return False
    return True


def heapify(arr, m): 
    heapified = False
    while not heapified:
        for i in range(m // 2 - 1, -1, -1):
            left = 2 * i + 1
            right = 2 * i + 2
            if left < m and arr[left] > arr[i]:
                arr[i], arr[left] = arr[left], arr[i]
            elif right < m and arr[right] > arr[i]:
                arr[i], arr[right] = arr[right], arr[i]
        heapified = isHeap(arr, m)
    return arr


def heapsort(arr):
    n = len(arr)
    for i in range(n, 0, -1):
        arr = heapify(arr, i)
        arr[0], arr[i-1] = arr[i-1], arr[0]
    return arr


arr = [5, 3, 8, 4, 1, 2]
m = len(arr)
print(heapsort(arr))
